// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/crypto.dart';
import 'api/file.dart';
import 'api/group.dart';
import 'api/user.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  BelongsToType dco_decode_belongs_to_type(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  Claims dco_decode_claims(dynamic raw);

  @protected
  CryptoRawOutput dco_decode_crypto_raw_output(dynamic raw);

  @protected
  DeviceKeyData dco_decode_device_key_data(dynamic raw);

  @protected
  EncryptedHead dco_decode_encrypted_head(dynamic raw);

  @protected
  FileData dco_decode_file_data(dynamic raw);

  @protected
  FileDoneRegister dco_decode_file_done_register(dynamic raw);

  @protected
  FileDownloadResult dco_decode_file_download_result(dynamic raw);

  @protected
  FilePartListItem dco_decode_file_part_list_item(dynamic raw);

  @protected
  FilePrepareRegister dco_decode_file_prepare_register(dynamic raw);

  @protected
  FileRegisterOutput dco_decode_file_register_output(dynamic raw);

  @protected
  GeneratedRegisterData dco_decode_generated_register_data(dynamic raw);

  @protected
  GroupChildrenList dco_decode_group_children_list(dynamic raw);

  @protected
  GroupDataCheckUpdateServerOutput
      dco_decode_group_data_check_update_server_output(dynamic raw);

  @protected
  GroupInviteReqList dco_decode_group_invite_req_list(dynamic raw);

  @protected
  GroupJoinReqList dco_decode_group_join_req_list(dynamic raw);

  @protected
  GroupKeyData dco_decode_group_key_data(dynamic raw);

  @protected
  GroupOutData dco_decode_group_out_data(dynamic raw);

  @protected
  GroupOutDataHmacKeys dco_decode_group_out_data_hmac_keys(dynamic raw);

  @protected
  GroupOutDataKeys dco_decode_group_out_data_keys(dynamic raw);

  @protected
  GroupOutDataSortableKeys dco_decode_group_out_data_sortable_keys(dynamic raw);

  @protected
  GroupPublicKeyData dco_decode_group_public_key_data(dynamic raw);

  @protected
  GroupUserListItem dco_decode_group_user_list_item(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  KeyRotationGetOut dco_decode_key_rotation_get_out(dynamic raw);

  @protected
  KeyRotationInput dco_decode_key_rotation_input(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<FilePartListItem> dco_decode_list_file_part_list_item(dynamic raw);

  @protected
  List<GroupChildrenList> dco_decode_list_group_children_list(dynamic raw);

  @protected
  List<GroupInviteReqList> dco_decode_list_group_invite_req_list(dynamic raw);

  @protected
  List<GroupJoinReqList> dco_decode_list_group_join_req_list(dynamic raw);

  @protected
  List<GroupOutDataHmacKeys> dco_decode_list_group_out_data_hmac_keys(
      dynamic raw);

  @protected
  List<GroupOutDataKeys> dco_decode_list_group_out_data_keys(dynamic raw);

  @protected
  List<GroupOutDataSortableKeys> dco_decode_list_group_out_data_sortable_keys(
      dynamic raw);

  @protected
  List<GroupUserListItem> dco_decode_list_group_user_list_item(dynamic raw);

  @protected
  ListGroups dco_decode_list_groups(dynamic raw);

  @protected
  List<KeyRotationGetOut> dco_decode_list_key_rotation_get_out(dynamic raw);

  @protected
  List<ListGroups> dco_decode_list_list_groups(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<UserDeviceList> dco_decode_list_user_device_list(dynamic raw);

  @protected
  List<UserKeyData> dco_decode_list_user_key_data(dynamic raw);

  @protected
  NonRegisteredKeyOutput dco_decode_non_registered_key_output(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  OtpRecoveryKeysOutput dco_decode_otp_recovery_keys_output(dynamic raw);

  @protected
  OtpRegister dco_decode_otp_register(dynamic raw);

  @protected
  OtpRegisterUrl dco_decode_otp_register_url(dynamic raw);

  @protected
  PreRegisterDeviceData dco_decode_pre_register_device_data(dynamic raw);

  @protected
  RegisterDeviceData dco_decode_register_device_data(dynamic raw);

  @protected
  SearchableCreateOutput dco_decode_searchable_create_output(dynamic raw);

  @protected
  SortableEncryptOutput dco_decode_sortable_encrypt_output(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  UserData dco_decode_user_data(dynamic raw);

  @protected
  UserDeviceList dco_decode_user_device_list(dynamic raw);

  @protected
  UserInitServerOutput dco_decode_user_init_server_output(dynamic raw);

  @protected
  UserKeyData dco_decode_user_key_data(dynamic raw);

  @protected
  UserLoginOut dco_decode_user_login_out(dynamic raw);

  @protected
  UserPublicKeyData dco_decode_user_public_key_data(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  BelongsToType sse_decode_belongs_to_type(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  Claims sse_decode_claims(SseDeserializer deserializer);

  @protected
  CryptoRawOutput sse_decode_crypto_raw_output(SseDeserializer deserializer);

  @protected
  DeviceKeyData sse_decode_device_key_data(SseDeserializer deserializer);

  @protected
  EncryptedHead sse_decode_encrypted_head(SseDeserializer deserializer);

  @protected
  FileData sse_decode_file_data(SseDeserializer deserializer);

  @protected
  FileDoneRegister sse_decode_file_done_register(SseDeserializer deserializer);

  @protected
  FileDownloadResult sse_decode_file_download_result(
      SseDeserializer deserializer);

  @protected
  FilePartListItem sse_decode_file_part_list_item(SseDeserializer deserializer);

  @protected
  FilePrepareRegister sse_decode_file_prepare_register(
      SseDeserializer deserializer);

  @protected
  FileRegisterOutput sse_decode_file_register_output(
      SseDeserializer deserializer);

  @protected
  GeneratedRegisterData sse_decode_generated_register_data(
      SseDeserializer deserializer);

  @protected
  GroupChildrenList sse_decode_group_children_list(
      SseDeserializer deserializer);

  @protected
  GroupDataCheckUpdateServerOutput
      sse_decode_group_data_check_update_server_output(
          SseDeserializer deserializer);

  @protected
  GroupInviteReqList sse_decode_group_invite_req_list(
      SseDeserializer deserializer);

  @protected
  GroupJoinReqList sse_decode_group_join_req_list(SseDeserializer deserializer);

  @protected
  GroupKeyData sse_decode_group_key_data(SseDeserializer deserializer);

  @protected
  GroupOutData sse_decode_group_out_data(SseDeserializer deserializer);

  @protected
  GroupOutDataHmacKeys sse_decode_group_out_data_hmac_keys(
      SseDeserializer deserializer);

  @protected
  GroupOutDataKeys sse_decode_group_out_data_keys(SseDeserializer deserializer);

  @protected
  GroupOutDataSortableKeys sse_decode_group_out_data_sortable_keys(
      SseDeserializer deserializer);

  @protected
  GroupPublicKeyData sse_decode_group_public_key_data(
      SseDeserializer deserializer);

  @protected
  GroupUserListItem sse_decode_group_user_list_item(
      SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  KeyRotationGetOut sse_decode_key_rotation_get_out(
      SseDeserializer deserializer);

  @protected
  KeyRotationInput sse_decode_key_rotation_input(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<FilePartListItem> sse_decode_list_file_part_list_item(
      SseDeserializer deserializer);

  @protected
  List<GroupChildrenList> sse_decode_list_group_children_list(
      SseDeserializer deserializer);

  @protected
  List<GroupInviteReqList> sse_decode_list_group_invite_req_list(
      SseDeserializer deserializer);

  @protected
  List<GroupJoinReqList> sse_decode_list_group_join_req_list(
      SseDeserializer deserializer);

  @protected
  List<GroupOutDataHmacKeys> sse_decode_list_group_out_data_hmac_keys(
      SseDeserializer deserializer);

  @protected
  List<GroupOutDataKeys> sse_decode_list_group_out_data_keys(
      SseDeserializer deserializer);

  @protected
  List<GroupOutDataSortableKeys> sse_decode_list_group_out_data_sortable_keys(
      SseDeserializer deserializer);

  @protected
  List<GroupUserListItem> sse_decode_list_group_user_list_item(
      SseDeserializer deserializer);

  @protected
  ListGroups sse_decode_list_groups(SseDeserializer deserializer);

  @protected
  List<KeyRotationGetOut> sse_decode_list_key_rotation_get_out(
      SseDeserializer deserializer);

  @protected
  List<ListGroups> sse_decode_list_list_groups(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<UserDeviceList> sse_decode_list_user_device_list(
      SseDeserializer deserializer);

  @protected
  List<UserKeyData> sse_decode_list_user_key_data(SseDeserializer deserializer);

  @protected
  NonRegisteredKeyOutput sse_decode_non_registered_key_output(
      SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  OtpRecoveryKeysOutput sse_decode_otp_recovery_keys_output(
      SseDeserializer deserializer);

  @protected
  OtpRegister sse_decode_otp_register(SseDeserializer deserializer);

  @protected
  OtpRegisterUrl sse_decode_otp_register_url(SseDeserializer deserializer);

  @protected
  PreRegisterDeviceData sse_decode_pre_register_device_data(
      SseDeserializer deserializer);

  @protected
  RegisterDeviceData sse_decode_register_device_data(
      SseDeserializer deserializer);

  @protected
  SearchableCreateOutput sse_decode_searchable_create_output(
      SseDeserializer deserializer);

  @protected
  SortableEncryptOutput sse_decode_sortable_encrypt_output(
      SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  UserData sse_decode_user_data(SseDeserializer deserializer);

  @protected
  UserDeviceList sse_decode_user_device_list(SseDeserializer deserializer);

  @protected
  UserInitServerOutput sse_decode_user_init_server_output(
      SseDeserializer deserializer);

  @protected
  UserKeyData sse_decode_user_key_data(SseDeserializer deserializer);

  @protected
  UserLoginOut sse_decode_user_login_out(SseDeserializer deserializer);

  @protected
  UserPublicKeyData sse_decode_user_public_key_data(
      SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_String(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_u_8_strict(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_box_autoadd_bool(bool raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_bool(cst_encode_bool(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_i_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_i_32(cst_encode_i_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_box_autoadd_u_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return wire.cst_new_box_autoadd_u_32(cst_encode_u_32(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_list_String(List<String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_file_part_list_item>
      cst_encode_list_file_part_list_item(List<FilePartListItem> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_file_part_list_item(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_file_part_list_item(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_children_list>
      cst_encode_list_group_children_list(List<GroupChildrenList> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_children_list(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_children_list(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_invite_req_list>
      cst_encode_list_group_invite_req_list(List<GroupInviteReqList> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_invite_req_list(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_invite_req_list(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_join_req_list>
      cst_encode_list_group_join_req_list(List<GroupJoinReqList> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_join_req_list(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_join_req_list(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_out_data_hmac_keys>
      cst_encode_list_group_out_data_hmac_keys(List<GroupOutDataHmacKeys> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_out_data_hmac_keys(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_out_data_hmac_keys(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_out_data_keys>
      cst_encode_list_group_out_data_keys(List<GroupOutDataKeys> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_out_data_keys(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_out_data_keys(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_out_data_sortable_keys>
      cst_encode_list_group_out_data_sortable_keys(
          List<GroupOutDataSortableKeys> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_out_data_sortable_keys(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_out_data_sortable_keys(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_group_user_list_item>
      cst_encode_list_group_user_list_item(List<GroupUserListItem> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_group_user_list_item(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_group_user_list_item(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_key_rotation_get_out>
      cst_encode_list_key_rotation_get_out(List<KeyRotationGetOut> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_key_rotation_get_out(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_key_rotation_get_out(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_list_groups> cst_encode_list_list_groups(
      List<ListGroups> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_list_groups(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_list_groups(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_loose> cst_encode_list_prim_u_8_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_list_prim_u_8_strict(
      Uint8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_user_device_list> cst_encode_list_user_device_list(
      List<UserDeviceList> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_user_device_list(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_user_device_list(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_user_key_data> cst_encode_list_user_key_data(
      List<UserKeyData> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_user_key_data(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_user_key_data(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_opt_String(
      String? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_opt_box_autoadd_bool(bool? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_bool(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_i_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_opt_box_autoadd_u_32(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_32(raw);
  }

  @protected
  int cst_encode_u_64(BigInt raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.toSigned(64).toInt();
  }

  @protected
  int cst_encode_usize(BigInt raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.toSigned(64).toInt();
  }

  @protected
  void cst_api_fill_to_wire_claims(Claims apiObj, wire_cst_claims wireObj) {
    wireObj.aud = cst_encode_String(apiObj.aud);
    wireObj.sub = cst_encode_String(apiObj.sub);
    wireObj.exp = cst_encode_usize(apiObj.exp);
    wireObj.iat = cst_encode_usize(apiObj.iat);
    wireObj.fresh = cst_encode_bool(apiObj.fresh);
  }

  @protected
  void cst_api_fill_to_wire_crypto_raw_output(
      CryptoRawOutput apiObj, wire_cst_crypto_raw_output wireObj) {
    wireObj.head = cst_encode_String(apiObj.head);
    wireObj.data = cst_encode_list_prim_u_8_strict(apiObj.data);
  }

  @protected
  void cst_api_fill_to_wire_device_key_data(
      DeviceKeyData apiObj, wire_cst_device_key_data wireObj) {
    wireObj.private_key = cst_encode_String(apiObj.privateKey);
    wireObj.public_key = cst_encode_String(apiObj.publicKey);
    wireObj.sign_key = cst_encode_String(apiObj.signKey);
    wireObj.verify_key = cst_encode_String(apiObj.verifyKey);
    wireObj.exported_public_key = cst_encode_String(apiObj.exportedPublicKey);
    wireObj.exported_verify_key = cst_encode_String(apiObj.exportedVerifyKey);
  }

  @protected
  void cst_api_fill_to_wire_encrypted_head(
      EncryptedHead apiObj, wire_cst_encrypted_head wireObj) {
    wireObj.id = cst_encode_String(apiObj.id);
    wireObj.sign_id = cst_encode_opt_String(apiObj.signId);
    wireObj.sign_alg = cst_encode_opt_String(apiObj.signAlg);
  }

  @protected
  void cst_api_fill_to_wire_file_data(
      FileData apiObj, wire_cst_file_data wireObj) {
    wireObj.file_id = cst_encode_String(apiObj.fileId);
    wireObj.master_key_id = cst_encode_String(apiObj.masterKeyId);
    wireObj.owner = cst_encode_String(apiObj.owner);
    wireObj.belongs_to = cst_encode_opt_String(apiObj.belongsTo);
    wireObj.belongs_to_type = cst_encode_belongs_to_type(apiObj.belongsToType);
    wireObj.encrypted_key = cst_encode_String(apiObj.encryptedKey);
    wireObj.encrypted_key_alg = cst_encode_String(apiObj.encryptedKeyAlg);
    wireObj.encrypted_file_name =
        cst_encode_opt_String(apiObj.encryptedFileName);
    wireObj.part_list = cst_encode_list_file_part_list_item(apiObj.partList);
  }

  @protected
  void cst_api_fill_to_wire_file_done_register(
      FileDoneRegister apiObj, wire_cst_file_done_register wireObj) {
    wireObj.file_id = cst_encode_String(apiObj.fileId);
    wireObj.session_id = cst_encode_String(apiObj.sessionId);
  }

  @protected
  void cst_api_fill_to_wire_file_download_result(
      FileDownloadResult apiObj, wire_cst_file_download_result wireObj) {
    wireObj.next_file_key = cst_encode_String(apiObj.nextFileKey);
    wireObj.file = cst_encode_list_prim_u_8_strict(apiObj.file);
  }

  @protected
  void cst_api_fill_to_wire_file_part_list_item(
      FilePartListItem apiObj, wire_cst_file_part_list_item wireObj) {
    wireObj.part_id = cst_encode_String(apiObj.partId);
    wireObj.sequence = cst_encode_i_32(apiObj.sequence);
    wireObj.extern_storage = cst_encode_bool(apiObj.externStorage);
  }

  @protected
  void cst_api_fill_to_wire_file_prepare_register(
      FilePrepareRegister apiObj, wire_cst_file_prepare_register wireObj) {
    wireObj.encrypted_file_name =
        cst_encode_opt_String(apiObj.encryptedFileName);
    wireObj.server_input = cst_encode_String(apiObj.serverInput);
  }

  @protected
  void cst_api_fill_to_wire_file_register_output(
      FileRegisterOutput apiObj, wire_cst_file_register_output wireObj) {
    wireObj.file_id = cst_encode_String(apiObj.fileId);
    wireObj.session_id = cst_encode_String(apiObj.sessionId);
    wireObj.encrypted_file_name =
        cst_encode_opt_String(apiObj.encryptedFileName);
  }

  @protected
  void cst_api_fill_to_wire_generated_register_data(
      GeneratedRegisterData apiObj, wire_cst_generated_register_data wireObj) {
    wireObj.identifier = cst_encode_String(apiObj.identifier);
    wireObj.password = cst_encode_String(apiObj.password);
  }

  @protected
  void cst_api_fill_to_wire_group_children_list(
      GroupChildrenList apiObj, wire_cst_group_children_list wireObj) {
    wireObj.group_id = cst_encode_String(apiObj.groupId);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.parent = cst_encode_opt_String(apiObj.parent);
  }

  @protected
  void cst_api_fill_to_wire_group_data_check_update_server_output(
      GroupDataCheckUpdateServerOutput apiObj,
      wire_cst_group_data_check_update_server_output wireObj) {
    wireObj.key_update = cst_encode_bool(apiObj.keyUpdate);
    wireObj.rank = cst_encode_i_32(apiObj.rank);
  }

  @protected
  void cst_api_fill_to_wire_group_invite_req_list(
      GroupInviteReqList apiObj, wire_cst_group_invite_req_list wireObj) {
    wireObj.group_id = cst_encode_String(apiObj.groupId);
    wireObj.time = cst_encode_String(apiObj.time);
  }

  @protected
  void cst_api_fill_to_wire_group_join_req_list(
      GroupJoinReqList apiObj, wire_cst_group_join_req_list wireObj) {
    wireObj.user_id = cst_encode_String(apiObj.userId);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.user_type = cst_encode_i_32(apiObj.userType);
  }

  @protected
  void cst_api_fill_to_wire_group_key_data(
      GroupKeyData apiObj, wire_cst_group_key_data wireObj) {
    wireObj.private_group_key = cst_encode_String(apiObj.privateGroupKey);
    wireObj.public_group_key = cst_encode_String(apiObj.publicGroupKey);
    wireObj.exported_public_key = cst_encode_String(apiObj.exportedPublicKey);
    wireObj.group_key = cst_encode_String(apiObj.groupKey);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.group_key_id = cst_encode_String(apiObj.groupKeyId);
  }

  @protected
  void cst_api_fill_to_wire_group_out_data(
      GroupOutData apiObj, wire_cst_group_out_data wireObj) {
    wireObj.group_id = cst_encode_String(apiObj.groupId);
    wireObj.parent_group_id = cst_encode_opt_String(apiObj.parentGroupId);
    wireObj.rank = cst_encode_i_32(apiObj.rank);
    wireObj.key_update = cst_encode_bool(apiObj.keyUpdate);
    wireObj.created_time = cst_encode_String(apiObj.createdTime);
    wireObj.joined_time = cst_encode_String(apiObj.joinedTime);
    wireObj.keys = cst_encode_list_group_out_data_keys(apiObj.keys);
    wireObj.hmac_keys =
        cst_encode_list_group_out_data_hmac_keys(apiObj.hmacKeys);
    wireObj.sortable_keys =
        cst_encode_list_group_out_data_sortable_keys(apiObj.sortableKeys);
    wireObj.access_by_group_as_member =
        cst_encode_opt_String(apiObj.accessByGroupAsMember);
    wireObj.access_by_parent_group =
        cst_encode_opt_String(apiObj.accessByParentGroup);
    wireObj.is_connected_group = cst_encode_bool(apiObj.isConnectedGroup);
  }

  @protected
  void cst_api_fill_to_wire_group_out_data_hmac_keys(
      GroupOutDataHmacKeys apiObj, wire_cst_group_out_data_hmac_keys wireObj) {
    wireObj.group_key_id = cst_encode_String(apiObj.groupKeyId);
    wireObj.key_data = cst_encode_String(apiObj.keyData);
  }

  @protected
  void cst_api_fill_to_wire_group_out_data_keys(
      GroupOutDataKeys apiObj, wire_cst_group_out_data_keys wireObj) {
    wireObj.private_key_id = cst_encode_String(apiObj.privateKeyId);
    wireObj.key_data = cst_encode_String(apiObj.keyData);
    wireObj.signed_by_user_id = cst_encode_opt_String(apiObj.signedByUserId);
    wireObj.signed_by_user_sign_key_id =
        cst_encode_opt_String(apiObj.signedByUserSignKeyId);
  }

  @protected
  void cst_api_fill_to_wire_group_out_data_sortable_keys(
      GroupOutDataSortableKeys apiObj,
      wire_cst_group_out_data_sortable_keys wireObj) {
    wireObj.group_key_id = cst_encode_String(apiObj.groupKeyId);
    wireObj.key_data = cst_encode_String(apiObj.keyData);
  }

  @protected
  void cst_api_fill_to_wire_group_public_key_data(
      GroupPublicKeyData apiObj, wire_cst_group_public_key_data wireObj) {
    wireObj.public_key = cst_encode_String(apiObj.publicKey);
    wireObj.public_key_id = cst_encode_String(apiObj.publicKeyId);
  }

  @protected
  void cst_api_fill_to_wire_group_user_list_item(
      GroupUserListItem apiObj, wire_cst_group_user_list_item wireObj) {
    wireObj.user_id = cst_encode_String(apiObj.userId);
    wireObj.rank = cst_encode_i_32(apiObj.rank);
    wireObj.joined_time = cst_encode_String(apiObj.joinedTime);
    wireObj.user_type = cst_encode_i_32(apiObj.userType);
  }

  @protected
  void cst_api_fill_to_wire_key_rotation_get_out(
      KeyRotationGetOut apiObj, wire_cst_key_rotation_get_out wireObj) {
    wireObj.pre_group_key_id = cst_encode_String(apiObj.preGroupKeyId);
    wireObj.new_group_key_id = cst_encode_String(apiObj.newGroupKeyId);
    wireObj.encrypted_eph_key_key_id =
        cst_encode_String(apiObj.encryptedEphKeyKeyId);
    wireObj.server_output = cst_encode_String(apiObj.serverOutput);
  }

  @protected
  void cst_api_fill_to_wire_key_rotation_input(
      KeyRotationInput apiObj, wire_cst_key_rotation_input wireObj) {
    wireObj.error = cst_encode_opt_String(apiObj.error);
    wireObj.encrypted_ephemeral_key_by_group_key_and_public_key =
        cst_encode_String(apiObj.encryptedEphemeralKeyByGroupKeyAndPublicKey);
    wireObj.encrypted_group_key_by_ephemeral =
        cst_encode_String(apiObj.encryptedGroupKeyByEphemeral);
    wireObj.ephemeral_alg = cst_encode_String(apiObj.ephemeralAlg);
    wireObj.encrypted_eph_key_key_id =
        cst_encode_String(apiObj.encryptedEphKeyKeyId);
    wireObj.previous_group_key_id =
        cst_encode_String(apiObj.previousGroupKeyId);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.new_group_key_id = cst_encode_String(apiObj.newGroupKeyId);
  }

  @protected
  void cst_api_fill_to_wire_list_groups(
      ListGroups apiObj, wire_cst_list_groups wireObj) {
    wireObj.group_id = cst_encode_String(apiObj.groupId);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.joined_time = cst_encode_String(apiObj.joinedTime);
    wireObj.rank = cst_encode_i_32(apiObj.rank);
    wireObj.parent = cst_encode_opt_String(apiObj.parent);
  }

  @protected
  void cst_api_fill_to_wire_non_registered_key_output(
      NonRegisteredKeyOutput apiObj,
      wire_cst_non_registered_key_output wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.encrypted_key = cst_encode_String(apiObj.encryptedKey);
  }

  @protected
  void cst_api_fill_to_wire_otp_recovery_keys_output(
      OtpRecoveryKeysOutput apiObj, wire_cst_otp_recovery_keys_output wireObj) {
    wireObj.keys = cst_encode_list_String(apiObj.keys);
  }

  @protected
  void cst_api_fill_to_wire_otp_register(
      OtpRegister apiObj, wire_cst_otp_register wireObj) {
    wireObj.secret = cst_encode_String(apiObj.secret);
    wireObj.alg = cst_encode_String(apiObj.alg);
    wireObj.recover = cst_encode_list_String(apiObj.recover);
  }

  @protected
  void cst_api_fill_to_wire_otp_register_url(
      OtpRegisterUrl apiObj, wire_cst_otp_register_url wireObj) {
    wireObj.url = cst_encode_String(apiObj.url);
    wireObj.recover = cst_encode_list_String(apiObj.recover);
  }

  @protected
  void cst_api_fill_to_wire_pre_register_device_data(
      PreRegisterDeviceData apiObj, wire_cst_pre_register_device_data wireObj) {
    wireObj.input = cst_encode_String(apiObj.input);
    wireObj.exported_public_key = cst_encode_String(apiObj.exportedPublicKey);
  }

  @protected
  void cst_api_fill_to_wire_register_device_data(
      RegisterDeviceData apiObj, wire_cst_register_device_data wireObj) {
    wireObj.session_id = cst_encode_String(apiObj.sessionId);
    wireObj.exported_public_key = cst_encode_String(apiObj.exportedPublicKey);
  }

  @protected
  void cst_api_fill_to_wire_searchable_create_output(
      SearchableCreateOutput apiObj,
      wire_cst_searchable_create_output wireObj) {
    wireObj.hashes = cst_encode_list_String(apiObj.hashes);
    wireObj.alg = cst_encode_String(apiObj.alg);
    wireObj.key_id = cst_encode_String(apiObj.keyId);
  }

  @protected
  void cst_api_fill_to_wire_sortable_encrypt_output(
      SortableEncryptOutput apiObj, wire_cst_sortable_encrypt_output wireObj) {
    wireObj.number = cst_encode_u_64(apiObj.number);
    wireObj.alg = cst_encode_String(apiObj.alg);
    wireObj.key_id = cst_encode_String(apiObj.keyId);
  }

  @protected
  void cst_api_fill_to_wire_user_data(
      UserData apiObj, wire_cst_user_data wireObj) {
    wireObj.jwt = cst_encode_String(apiObj.jwt);
    wireObj.user_id = cst_encode_String(apiObj.userId);
    wireObj.device_id = cst_encode_String(apiObj.deviceId);
    wireObj.refresh_token = cst_encode_String(apiObj.refreshToken);
    cst_api_fill_to_wire_device_key_data(apiObj.keys, wireObj.keys);
    wireObj.user_keys = cst_encode_list_user_key_data(apiObj.userKeys);
    wireObj.hmac_keys =
        cst_encode_list_group_out_data_hmac_keys(apiObj.hmacKeys);
  }

  @protected
  void cst_api_fill_to_wire_user_device_list(
      UserDeviceList apiObj, wire_cst_user_device_list wireObj) {
    wireObj.device_id = cst_encode_String(apiObj.deviceId);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.device_identifier = cst_encode_String(apiObj.deviceIdentifier);
  }

  @protected
  void cst_api_fill_to_wire_user_init_server_output(
      UserInitServerOutput apiObj, wire_cst_user_init_server_output wireObj) {
    wireObj.jwt = cst_encode_String(apiObj.jwt);
    wireObj.invites = cst_encode_list_group_invite_req_list(apiObj.invites);
  }

  @protected
  void cst_api_fill_to_wire_user_key_data(
      UserKeyData apiObj, wire_cst_user_key_data wireObj) {
    wireObj.private_key = cst_encode_String(apiObj.privateKey);
    wireObj.public_key = cst_encode_String(apiObj.publicKey);
    wireObj.group_key = cst_encode_String(apiObj.groupKey);
    wireObj.time = cst_encode_String(apiObj.time);
    wireObj.group_key_id = cst_encode_String(apiObj.groupKeyId);
    wireObj.sign_key = cst_encode_String(apiObj.signKey);
    wireObj.verify_key = cst_encode_String(apiObj.verifyKey);
    wireObj.exported_public_key = cst_encode_String(apiObj.exportedPublicKey);
    wireObj.exported_public_key_sig_key_id =
        cst_encode_opt_String(apiObj.exportedPublicKeySigKeyId);
    wireObj.exported_verify_key = cst_encode_String(apiObj.exportedVerifyKey);
  }

  @protected
  void cst_api_fill_to_wire_user_login_out(
      UserLoginOut apiObj, wire_cst_user_login_out wireObj) {
    wireObj.direct = cst_encode_opt_String(apiObj.direct);
    wireObj.master_key = cst_encode_opt_String(apiObj.masterKey);
    wireObj.auth_key = cst_encode_opt_String(apiObj.authKey);
  }

  @protected
  void cst_api_fill_to_wire_user_public_key_data(
      UserPublicKeyData apiObj, wire_cst_user_public_key_data wireObj) {
    wireObj.public_key = cst_encode_String(apiObj.publicKey);
    wireObj.public_key_id = cst_encode_String(apiObj.publicKeyId);
    wireObj.public_key_sig_key_id =
        cst_encode_opt_String(apiObj.publicKeySigKeyId);
  }

  @protected
  int cst_encode_belongs_to_type(BelongsToType raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_belongs_to_type(BelongsToType self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_claims(Claims self, SseSerializer serializer);

  @protected
  void sse_encode_crypto_raw_output(
      CryptoRawOutput self, SseSerializer serializer);

  @protected
  void sse_encode_device_key_data(DeviceKeyData self, SseSerializer serializer);

  @protected
  void sse_encode_encrypted_head(EncryptedHead self, SseSerializer serializer);

  @protected
  void sse_encode_file_data(FileData self, SseSerializer serializer);

  @protected
  void sse_encode_file_done_register(
      FileDoneRegister self, SseSerializer serializer);

  @protected
  void sse_encode_file_download_result(
      FileDownloadResult self, SseSerializer serializer);

  @protected
  void sse_encode_file_part_list_item(
      FilePartListItem self, SseSerializer serializer);

  @protected
  void sse_encode_file_prepare_register(
      FilePrepareRegister self, SseSerializer serializer);

  @protected
  void sse_encode_file_register_output(
      FileRegisterOutput self, SseSerializer serializer);

  @protected
  void sse_encode_generated_register_data(
      GeneratedRegisterData self, SseSerializer serializer);

  @protected
  void sse_encode_group_children_list(
      GroupChildrenList self, SseSerializer serializer);

  @protected
  void sse_encode_group_data_check_update_server_output(
      GroupDataCheckUpdateServerOutput self, SseSerializer serializer);

  @protected
  void sse_encode_group_invite_req_list(
      GroupInviteReqList self, SseSerializer serializer);

  @protected
  void sse_encode_group_join_req_list(
      GroupJoinReqList self, SseSerializer serializer);

  @protected
  void sse_encode_group_key_data(GroupKeyData self, SseSerializer serializer);

  @protected
  void sse_encode_group_out_data(GroupOutData self, SseSerializer serializer);

  @protected
  void sse_encode_group_out_data_hmac_keys(
      GroupOutDataHmacKeys self, SseSerializer serializer);

  @protected
  void sse_encode_group_out_data_keys(
      GroupOutDataKeys self, SseSerializer serializer);

  @protected
  void sse_encode_group_out_data_sortable_keys(
      GroupOutDataSortableKeys self, SseSerializer serializer);

  @protected
  void sse_encode_group_public_key_data(
      GroupPublicKeyData self, SseSerializer serializer);

  @protected
  void sse_encode_group_user_list_item(
      GroupUserListItem self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_key_rotation_get_out(
      KeyRotationGetOut self, SseSerializer serializer);

  @protected
  void sse_encode_key_rotation_input(
      KeyRotationInput self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_file_part_list_item(
      List<FilePartListItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_children_list(
      List<GroupChildrenList> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_invite_req_list(
      List<GroupInviteReqList> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_join_req_list(
      List<GroupJoinReqList> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_out_data_hmac_keys(
      List<GroupOutDataHmacKeys> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_out_data_keys(
      List<GroupOutDataKeys> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_out_data_sortable_keys(
      List<GroupOutDataSortableKeys> self, SseSerializer serializer);

  @protected
  void sse_encode_list_group_user_list_item(
      List<GroupUserListItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_groups(ListGroups self, SseSerializer serializer);

  @protected
  void sse_encode_list_key_rotation_get_out(
      List<KeyRotationGetOut> self, SseSerializer serializer);

  @protected
  void sse_encode_list_list_groups(
      List<ListGroups> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_user_device_list(
      List<UserDeviceList> self, SseSerializer serializer);

  @protected
  void sse_encode_list_user_key_data(
      List<UserKeyData> self, SseSerializer serializer);

  @protected
  void sse_encode_non_registered_key_output(
      NonRegisteredKeyOutput self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_otp_recovery_keys_output(
      OtpRecoveryKeysOutput self, SseSerializer serializer);

  @protected
  void sse_encode_otp_register(OtpRegister self, SseSerializer serializer);

  @protected
  void sse_encode_otp_register_url(
      OtpRegisterUrl self, SseSerializer serializer);

  @protected
  void sse_encode_pre_register_device_data(
      PreRegisterDeviceData self, SseSerializer serializer);

  @protected
  void sse_encode_register_device_data(
      RegisterDeviceData self, SseSerializer serializer);

  @protected
  void sse_encode_searchable_create_output(
      SearchableCreateOutput self, SseSerializer serializer);

  @protected
  void sse_encode_sortable_encrypt_output(
      SortableEncryptOutput self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user_data(UserData self, SseSerializer serializer);

  @protected
  void sse_encode_user_device_list(
      UserDeviceList self, SseSerializer serializer);

  @protected
  void sse_encode_user_init_server_output(
      UserInitServerOutput self, SseSerializer serializer);

  @protected
  void sse_encode_user_key_data(UserKeyData self, SseSerializer serializer);

  @protected
  void sse_encode_user_login_out(UserLoginOut self, SseSerializer serializer);

  @protected
  void sse_encode_user_public_key_data(
      UserPublicKeyData self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  void wire__crate__api__user__change_password(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> old_password,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> new_password,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> mfa_token,
    ffi.Pointer<ffi.Bool> mfa_recovery,
  ) {
    return _wire__crate__api__user__change_password(
      port_,
      base_url,
      auth_token,
      user_identifier,
      old_password,
      new_password,
      mfa_token,
      mfa_recovery,
    );
  }

  late final _wire__crate__api__user__change_passwordPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_sentc_wire__crate__api__user__change_password');
  late final _wire__crate__api__user__change_password =
      _wire__crate__api__user__change_passwordPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Bool>)>();

  void wire__crate__api__user__check_user_identifier_available(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
  ) {
    return _wire__crate__api__user__check_user_identifier_available(
      port_,
      base_url,
      auth_token,
      user_identifier,
    );
  }

  late final _wire__crate__api__user__check_user_identifier_availablePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__user__check_user_identifier_available');
  late final _wire__crate__api__user__check_user_identifier_available =
      _wire__crate__api__user__check_user_identifier_availablePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__create_searchable(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
    bool full,
    ffi.Pointer<ffi.Uint32> limit,
  ) {
    return _wire__crate__api__crypto__create_searchable(
      port_,
      key,
      data,
      full,
      limit,
    );
  }

  late final _wire__crate__api__crypto__create_searchablePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Bool,
                  ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_sentc_wire__crate__api__crypto__create_searchable');
  late final _wire__crate__api__crypto__create_searchable =
      _wire__crate__api__crypto__create_searchablePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool,
              ffi.Pointer<ffi.Uint32>)>();

  void wire__crate__api__crypto__create_searchable_raw(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
    bool full,
    ffi.Pointer<ffi.Uint32> limit,
  ) {
    return _wire__crate__api__crypto__create_searchable_raw(
      port_,
      key,
      data,
      full,
      limit,
    );
  }

  late final _wire__crate__api__crypto__create_searchable_rawPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Bool,
                  ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_sentc_wire__crate__api__crypto__create_searchable_raw');
  late final _wire__crate__api__crypto__create_searchable_raw =
      _wire__crate__api__crypto__create_searchable_rawPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool,
              ffi.Pointer<ffi.Uint32>)>();

  WireSyncRust2DartDco wire__crate__api__user__decode_jwt(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
  ) {
    return _wire__crate__api__user__decode_jwt(
      jwt,
    );
  }

  late final _wire__crate__api__user__decode_jwtPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__decode_jwt');
  late final _wire__crate__api__user__decode_jwt =
      _wire__crate__api__user__decode_jwtPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_asymmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> encrypted_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__crypto__decrypt_asymmetric(
      port_,
      private_key,
      encrypted_data,
      verify_key_data,
    );
  }

  late final _wire__crate__api__crypto__decrypt_asymmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_asymmetric');
  late final _wire__crate__api__crypto__decrypt_asymmetric =
      _wire__crate__api__crypto__decrypt_asymmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_raw_asymmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> encrypted_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> head,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__crypto__decrypt_raw_asymmetric(
      port_,
      private_key,
      encrypted_data,
      head,
      verify_key_data,
    );
  }

  late final _wire__crate__api__crypto__decrypt_raw_asymmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_raw_asymmetric');
  late final _wire__crate__api__crypto__decrypt_raw_asymmetric =
      _wire__crate__api__crypto__decrypt_raw_asymmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_raw_symmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> encrypted_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> head,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__crypto__decrypt_raw_symmetric(
      port_,
      key,
      encrypted_data,
      head,
      verify_key_data,
    );
  }

  late final _wire__crate__api__crypto__decrypt_raw_symmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_raw_symmetric');
  late final _wire__crate__api__crypto__decrypt_raw_symmetric =
      _wire__crate__api__crypto__decrypt_raw_symmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_string_asymmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__crypto__decrypt_string_asymmetric(
      port_,
      private_key,
      encrypted_data,
      verify_key_data,
    );
  }

  late final _wire__crate__api__crypto__decrypt_string_asymmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_string_asymmetric');
  late final _wire__crate__api__crypto__decrypt_string_asymmetric =
      _wire__crate__api__crypto__decrypt_string_asymmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_string_symmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__crypto__decrypt_string_symmetric(
      port_,
      key,
      encrypted_data,
      verify_key_data,
    );
  }

  late final _wire__crate__api__crypto__decrypt_string_symmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_string_symmetric');
  late final _wire__crate__api__crypto__decrypt_string_symmetric =
      _wire__crate__api__crypto__decrypt_string_symmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_sym_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_symmetric_key_info,
  ) {
    return _wire__crate__api__crypto__decrypt_sym_key(
      port_,
      master_key,
      encrypted_symmetric_key_info,
    );
  }

  late final _wire__crate__api__crypto__decrypt_sym_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_sym_key');
  late final _wire__crate__api__crypto__decrypt_sym_key =
      _wire__crate__api__crypto__decrypt_sym_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_sym_key_by_private_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_symmetric_key_info,
  ) {
    return _wire__crate__api__crypto__decrypt_sym_key_by_private_key(
      port_,
      private_key,
      encrypted_symmetric_key_info,
    );
  }

  late final _wire__crate__api__crypto__decrypt_sym_key_by_private_keyPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__crypto__decrypt_sym_key_by_private_key');
  late final _wire__crate__api__crypto__decrypt_sym_key_by_private_key =
      _wire__crate__api__crypto__decrypt_sym_key_by_private_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__decrypt_symmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> encrypted_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__crypto__decrypt_symmetric(
      port_,
      key,
      encrypted_data,
      verify_key_data,
    );
  }

  late final _wire__crate__api__crypto__decrypt_symmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__decrypt_symmetric');
  late final _wire__crate__api__crypto__decrypt_symmetric =
      _wire__crate__api__crypto__decrypt_symmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__delete_device(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> fresh_jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> device_id,
  ) {
    return _wire__crate__api__user__delete_device(
      port_,
      base_url,
      auth_token,
      fresh_jwt,
      device_id,
    );
  }

  late final _wire__crate__api__user__delete_devicePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__delete_device');
  late final _wire__crate__api__user__delete_device =
      _wire__crate__api__user__delete_devicePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__delete_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> fresh_jwt,
  ) {
    return _wire__crate__api__user__delete_user(
      port_,
      base_url,
      auth_token,
      fresh_jwt,
    );
  }

  late final _wire__crate__api__user__delete_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__delete_user');
  late final _wire__crate__api__user__delete_user =
      _wire__crate__api__user__delete_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__deserialize_head_from_string(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> head,
  ) {
    return _wire__crate__api__crypto__deserialize_head_from_string(
      port_,
      head,
    );
  }

  late final _wire__crate__api__crypto__deserialize_head_from_stringPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__crypto__deserialize_head_from_string');
  late final _wire__crate__api__crypto__deserialize_head_from_string =
      _wire__crate__api__crypto__deserialize_head_from_stringPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__disable_otp(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
  ) {
    return _wire__crate__api__user__disable_otp(
      port_,
      base_url,
      auth_token,
      jwt,
    );
  }

  late final _wire__crate__api__user__disable_otpPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__disable_otp');
  late final _wire__crate__api__user__disable_otp =
      _wire__crate__api__user__disable_otpPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire__crate__api__user__done_check_user_identifier_available(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__user__done_check_user_identifier_available(
      server_output,
    );
  }

  late final _wire__crate__api__user__done_check_user_identifier_availablePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__user__done_check_user_identifier_available');
  late final _wire__crate__api__user__done_check_user_identifier_available =
      _wire__crate__api__user__done_check_user_identifier_availablePtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__done_fetch_sym_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_out,
    bool non_registered,
  ) {
    return _wire__crate__api__crypto__done_fetch_sym_key(
      port_,
      master_key,
      server_out,
      non_registered,
    );
  }

  late final _wire__crate__api__crypto__done_fetch_sym_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Bool)>>(
      'frbgen_sentc_wire__crate__api__crypto__done_fetch_sym_key');
  late final _wire__crate__api__crypto__done_fetch_sym_key =
      _wire__crate__api__crypto__done_fetch_sym_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>, bool)>();

  void wire__crate__api__crypto__done_fetch_sym_key_by_private_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_out,
    bool non_registered,
  ) {
    return _wire__crate__api__crypto__done_fetch_sym_key_by_private_key(
      port_,
      private_key,
      server_out,
      non_registered,
    );
  }

  late final _wire__crate__api__crypto__done_fetch_sym_key_by_private_keyPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Bool)>>(
          'frbgen_sentc_wire__crate__api__crypto__done_fetch_sym_key_by_private_key');
  late final _wire__crate__api__crypto__done_fetch_sym_key_by_private_key =
      _wire__crate__api__crypto__done_fetch_sym_key_by_private_keyPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>, bool)>();

  void wire__crate__api__user__done_fetch_user_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__user__done_fetch_user_key(
      port_,
      private_key,
      server_output,
    );
  }

  late final _wire__crate__api__user__done_fetch_user_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__done_fetch_user_key');
  late final _wire__crate__api__user__done_fetch_user_key =
      _wire__crate__api__user__done_fetch_user_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire__crate__api__user__done_register(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__user__done_register(
      server_output,
    );
  }

  late final _wire__crate__api__user__done_registerPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__done_register');
  late final _wire__crate__api__user__done_register =
      _wire__crate__api__user__done_registerPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire__crate__api__user__done_register_device_start(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__user__done_register_device_start(
      server_output,
    );
  }

  late final _wire__crate__api__user__done_register_device_startPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__done_register_device_start');
  late final _wire__crate__api__user__done_register_device_start =
      _wire__crate__api__user__done_register_device_startPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__encrypt_asymmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> reply_public_key_data,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
  ) {
    return _wire__crate__api__crypto__encrypt_asymmetric(
      port_,
      reply_public_key_data,
      data,
      sign_key,
    );
  }

  late final _wire__crate__api__crypto__encrypt_asymmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__encrypt_asymmetric');
  late final _wire__crate__api__crypto__encrypt_asymmetric =
      _wire__crate__api__crypto__encrypt_asymmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__encrypt_raw_asymmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> reply_public_key_data,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
  ) {
    return _wire__crate__api__crypto__encrypt_raw_asymmetric(
      port_,
      reply_public_key_data,
      data,
      sign_key,
    );
  }

  late final _wire__crate__api__crypto__encrypt_raw_asymmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__encrypt_raw_asymmetric');
  late final _wire__crate__api__crypto__encrypt_raw_asymmetric =
      _wire__crate__api__crypto__encrypt_raw_asymmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__encrypt_raw_symmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
  ) {
    return _wire__crate__api__crypto__encrypt_raw_symmetric(
      port_,
      key,
      data,
      sign_key,
    );
  }

  late final _wire__crate__api__crypto__encrypt_raw_symmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__encrypt_raw_symmetric');
  late final _wire__crate__api__crypto__encrypt_raw_symmetric =
      _wire__crate__api__crypto__encrypt_raw_symmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__encrypt_string_asymmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> reply_public_key_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
  ) {
    return _wire__crate__api__crypto__encrypt_string_asymmetric(
      port_,
      reply_public_key_data,
      data,
      sign_key,
    );
  }

  late final _wire__crate__api__crypto__encrypt_string_asymmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__encrypt_string_asymmetric');
  late final _wire__crate__api__crypto__encrypt_string_asymmetric =
      _wire__crate__api__crypto__encrypt_string_asymmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__encrypt_string_symmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
  ) {
    return _wire__crate__api__crypto__encrypt_string_symmetric(
      port_,
      key,
      data,
      sign_key,
    );
  }

  late final _wire__crate__api__crypto__encrypt_string_symmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__encrypt_string_symmetric');
  late final _wire__crate__api__crypto__encrypt_string_symmetric =
      _wire__crate__api__crypto__encrypt_string_symmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__encrypt_symmetric(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
  ) {
    return _wire__crate__api__crypto__encrypt_symmetric(
      port_,
      key,
      data,
      sign_key,
    );
  }

  late final _wire__crate__api__crypto__encrypt_symmetricPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__encrypt_symmetric');
  late final _wire__crate__api__crypto__encrypt_symmetric =
      _wire__crate__api__crypto__encrypt_symmetricPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__extract_user_data(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
  ) {
    return _wire__crate__api__user__extract_user_data(
      port_,
      data,
    );
  }

  late final _wire__crate__api__user__extract_user_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__extract_user_data');
  late final _wire__crate__api__user__extract_user_data =
      _wire__crate__api__user__extract_user_dataPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__fetch_user_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
  ) {
    return _wire__crate__api__user__fetch_user_key(
      port_,
      base_url,
      auth_token,
      jwt,
      key_id,
      private_key,
    );
  }

  late final _wire__crate__api__user__fetch_user_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__fetch_user_key');
  late final _wire__crate__api__user__fetch_user_key =
      _wire__crate__api__user__fetch_user_keyPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_delete_file(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> file_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__file__file_delete_file(
      port_,
      base_url,
      auth_token,
      jwt,
      file_id,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__file__file_delete_filePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_delete_file');
  late final _wire__crate__api__file__file_delete_file =
      _wire__crate__api__file__file_delete_filePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_done_register_file(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__file__file_done_register_file(
      port_,
      server_output,
    );
  }

  late final _wire__crate__api__file__file_done_register_filePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_done_register_file');
  late final _wire__crate__api__file__file_done_register_file =
      _wire__crate__api__file__file_done_register_filePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_download_and_decrypt_file_part(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> url_prefix,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> part_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__file__file_download_and_decrypt_file_part(
      port_,
      base_url,
      url_prefix,
      auth_token,
      part_id,
      content_key,
      verify_key_data,
    );
  }

  late final _wire__crate__api__file__file_download_and_decrypt_file_partPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__file__file_download_and_decrypt_file_part');
  late final _wire__crate__api__file__file_download_and_decrypt_file_part =
      _wire__crate__api__file__file_download_and_decrypt_file_partPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_download_and_decrypt_file_part_start(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> url_prefix,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> part_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_data,
  ) {
    return _wire__crate__api__file__file_download_and_decrypt_file_part_start(
      port_,
      base_url,
      url_prefix,
      auth_token,
      part_id,
      content_key,
      verify_key_data,
    );
  }

  late final _wire__crate__api__file__file_download_and_decrypt_file_part_startPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__file__file_download_and_decrypt_file_part_start');
  late final _wire__crate__api__file__file_download_and_decrypt_file_part_start =
      _wire__crate__api__file__file_download_and_decrypt_file_part_startPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_download_file_meta(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__file__file_download_file_meta(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__file__file_download_file_metaPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_download_file_meta');
  late final _wire__crate__api__file__file_download_file_meta =
      _wire__crate__api__file__file_download_file_metaPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_download_part_list(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> file_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_sequence,
  ) {
    return _wire__crate__api__file__file_download_part_list(
      port_,
      base_url,
      auth_token,
      file_id,
      last_sequence,
    );
  }

  late final _wire__crate__api__file__file_download_part_listPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_download_part_list');
  late final _wire__crate__api__file__file_download_part_list =
      _wire__crate__api__file__file_download_part_listPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_file_name_update(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> file_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> file_name,
  ) {
    return _wire__crate__api__file__file_file_name_update(
      port_,
      base_url,
      auth_token,
      jwt,
      file_id,
      content_key,
      file_name,
    );
  }

  late final _wire__crate__api__file__file_file_name_updatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_file_name_update');
  late final _wire__crate__api__file__file_file_name_update =
      _wire__crate__api__file__file_file_name_updatePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_prepare_register_file(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> belongs_to_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> belongs_to_type,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> file_name,
  ) {
    return _wire__crate__api__file__file_prepare_register_file(
      port_,
      master_key_id,
      content_key,
      encrypted_content_key,
      belongs_to_id,
      belongs_to_type,
      file_name,
    );
  }

  late final _wire__crate__api__file__file_prepare_register_filePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_prepare_register_file');
  late final _wire__crate__api__file__file_prepare_register_file =
      _wire__crate__api__file__file_prepare_register_filePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_register_file(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> belongs_to_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> belongs_to_type,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> file_name,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__file__file_register_file(
      port_,
      base_url,
      auth_token,
      jwt,
      master_key_id,
      content_key,
      encrypted_content_key,
      belongs_to_id,
      belongs_to_type,
      file_name,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__file__file_register_filePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__file__file_register_file');
  late final _wire__crate__api__file__file_register_file =
      _wire__crate__api__file__file_register_filePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__file__file_upload_part(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> url_prefix,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id,
    bool end,
    int sequence,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> part1,
  ) {
    return _wire__crate__api__file__file_upload_part(
      port_,
      base_url,
      url_prefix,
      auth_token,
      jwt,
      session_id,
      end,
      sequence,
      content_key,
      sign_key,
      part1,
    );
  }

  late final _wire__crate__api__file__file_upload_partPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Bool,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_sentc_wire__crate__api__file__file_upload_part');
  late final _wire__crate__api__file__file_upload_part =
      _wire__crate__api__file__file_upload_partPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire__crate__api__file__file_upload_part_start(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> url_prefix,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id,
    bool end,
    int sequence,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> content_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> part1,
  ) {
    return _wire__crate__api__file__file_upload_part_start(
      port_,
      base_url,
      url_prefix,
      auth_token,
      jwt,
      session_id,
      end,
      sequence,
      content_key,
      sign_key,
      part1,
    );
  }

  late final _wire__crate__api__file__file_upload_part_startPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Bool,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_sentc_wire__crate__api__file__file_upload_part_start');
  late final _wire__crate__api__file__file_upload_part_start =
      _wire__crate__api__file__file_upload_part_startPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire__crate__api__crypto__generate_non_register_sym_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key,
  ) {
    return _wire__crate__api__crypto__generate_non_register_sym_key(
      port_,
      master_key,
    );
  }

  late final _wire__crate__api__crypto__generate_non_register_sym_keyPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__crypto__generate_non_register_sym_key');
  late final _wire__crate__api__crypto__generate_non_register_sym_key =
      _wire__crate__api__crypto__generate_non_register_sym_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__generate_non_register_sym_key_by_public_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> reply_public_key,
  ) {
    return _wire__crate__api__crypto__generate_non_register_sym_key_by_public_key(
      port_,
      reply_public_key,
    );
  }

  late final _wire__crate__api__crypto__generate_non_register_sym_key_by_public_keyPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__crypto__generate_non_register_sym_key_by_public_key');
  late final _wire__crate__api__crypto__generate_non_register_sym_key_by_public_key =
      _wire__crate__api__crypto__generate_non_register_sym_key_by_public_keyPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__generate_user_register_data(
    int port_,
  ) {
    return _wire__crate__api__user__generate_user_register_data(
      port_,
    );
  }

  late final _wire__crate__api__user__generate_user_register_dataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_sentc_wire__crate__api__user__generate_user_register_data');
  late final _wire__crate__api__user__generate_user_register_data =
      _wire__crate__api__user__generate_user_register_dataPtr
          .asFunction<void Function(int)>();

  void wire__crate__api__user__get_fresh_jwt(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> password,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> mfa_token,
    ffi.Pointer<ffi.Bool> mfa_recovery,
  ) {
    return _wire__crate__api__user__get_fresh_jwt(
      port_,
      base_url,
      auth_token,
      user_identifier,
      password,
      mfa_token,
      mfa_recovery,
    );
  }

  late final _wire__crate__api__user__get_fresh_jwtPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_sentc_wire__crate__api__user__get_fresh_jwt');
  late final _wire__crate__api__user__get_fresh_jwt =
      _wire__crate__api__user__get_fresh_jwtPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Bool>)>();

  void wire__crate__api__user__get_otp_recover_keys(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
  ) {
    return _wire__crate__api__user__get_otp_recover_keys(
      port_,
      base_url,
      auth_token,
      jwt,
    );
  }

  late final _wire__crate__api__user__get_otp_recover_keysPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__get_otp_recover_keys');
  late final _wire__crate__api__user__get_otp_recover_keys =
      _wire__crate__api__user__get_otp_recover_keysPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__get_user_devices(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_id,
  ) {
    return _wire__crate__api__user__get_user_devices(
      port_,
      base_url,
      auth_token,
      jwt,
      last_fetched_time,
      last_fetched_id,
    );
  }

  late final _wire__crate__api__user__get_user_devicesPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__get_user_devices');
  late final _wire__crate__api__user__get_user_devices =
      _wire__crate__api__user__get_user_devicesPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_accept_invite(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_accept_invite(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_accept_invitePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_accept_invite');
  late final _wire__crate__api__group__group_accept_invite =
      _wire__crate__api__group__group_accept_invitePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_accept_join_req(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
    int key_count,
    ffi.Pointer<ffi.Int32> rank,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_keys,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_accept_join_req(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      user_id,
      key_count,
      rank,
      admin_rank,
      user_public_key,
      group_keys,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_accept_join_reqPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_accept_join_req');
  late final _wire__crate__api__group__group_accept_join_req =
      _wire__crate__api__group__group_accept_join_reqPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<ffi.Int32>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_create_child_group(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> parent_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> parent_id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> starter,
  ) {
    return _wire__crate__api__group__group_create_child_group(
      port_,
      base_url,
      auth_token,
      jwt,
      parent_public_key,
      parent_id,
      admin_rank,
      group_as_member,
      sign_key,
      starter,
    );
  }

  late final _wire__crate__api__group__group_create_child_groupPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_create_child_group');
  late final _wire__crate__api__group__group_create_child_group =
      _wire__crate__api__group__group_create_child_groupPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_create_connected_group(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> connected_group_id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> parent_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> starter,
  ) {
    return _wire__crate__api__group__group_create_connected_group(
      port_,
      base_url,
      auth_token,
      jwt,
      connected_group_id,
      admin_rank,
      parent_public_key,
      group_as_member,
      sign_key,
      starter,
    );
  }

  late final _wire__crate__api__group__group_create_connected_groupPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Int32,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__group__group_create_connected_group');
  late final _wire__crate__api__group__group_create_connected_group =
      _wire__crate__api__group__group_create_connected_groupPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_create_group(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> creators_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> starter,
  ) {
    return _wire__crate__api__group__group_create_group(
      port_,
      base_url,
      auth_token,
      jwt,
      creators_public_key,
      group_as_member,
      sign_key,
      starter,
    );
  }

  late final _wire__crate__api__group__group_create_groupPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_create_group');
  late final _wire__crate__api__group__group_create_group =
      _wire__crate__api__group__group_create_groupPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_decrypt_hmac_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_key_data,
  ) {
    return _wire__crate__api__group__group_decrypt_hmac_key(
      port_,
      group_key,
      server_key_data,
    );
  }

  late final _wire__crate__api__group__group_decrypt_hmac_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_decrypt_hmac_key');
  late final _wire__crate__api__group__group_decrypt_hmac_key =
      _wire__crate__api__group__group_decrypt_hmac_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_decrypt_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_key_data,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key,
  ) {
    return _wire__crate__api__group__group_decrypt_key(
      port_,
      private_key,
      server_key_data,
      verify_key,
    );
  }

  late final _wire__crate__api__group__group_decrypt_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_decrypt_key');
  late final _wire__crate__api__group__group_decrypt_key =
      _wire__crate__api__group__group_decrypt_keyPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_decrypt_sortable_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_key_data,
  ) {
    return _wire__crate__api__group__group_decrypt_sortable_key(
      port_,
      group_key,
      server_key_data,
    );
  }

  late final _wire__crate__api__group__group_decrypt_sortable_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_decrypt_sortable_key');
  late final _wire__crate__api__group__group_decrypt_sortable_key =
      _wire__crate__api__group__group_decrypt_sortable_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_delete_group(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_delete_group(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      admin_rank,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_delete_groupPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_delete_group');
  late final _wire__crate__api__group__group_delete_group =
      _wire__crate__api__group__group_delete_groupPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_delete_sent_join_req(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> join_req_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_delete_sent_join_req(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      admin_rank,
      join_req_group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_delete_sent_join_reqPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_delete_sent_join_req');
  late final _wire__crate__api__group__group_delete_sent_join_req =
      _wire__crate__api__group__group_delete_sent_join_reqPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_delete_sent_join_req_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> join_req_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_delete_sent_join_req_user(
      port_,
      base_url,
      auth_token,
      jwt,
      join_req_group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_delete_sent_join_req_userPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__group__group_delete_sent_join_req_user');
  late final _wire__crate__api__group__group_delete_sent_join_req_user =
      _wire__crate__api__group__group_delete_sent_join_req_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_done_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__group__group_done_key_rotation(
      port_,
      private_key,
      public_key,
      pre_group_key,
      server_output,
    );
  }

  late final _wire__crate__api__group__group_done_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_done_key_rotation');
  late final _wire__crate__api__group__group_done_key_rotation =
      _wire__crate__api__group__group_done_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_extract_group_data(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__group__group_extract_group_data(
      port_,
      server_output,
    );
  }

  late final _wire__crate__api__group__group_extract_group_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_extract_group_data');
  late final _wire__crate__api__group__group_extract_group_data =
      _wire__crate__api__group__group_extract_group_dataPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_extract_group_keys(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__group__group_extract_group_keys(
      port_,
      server_output,
    );
  }

  late final _wire__crate__api__group__group_extract_group_keysPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_extract_group_keys');
  late final _wire__crate__api__group__group_extract_group_keys =
      _wire__crate__api__group__group_extract_group_keysPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_finish_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_finish_key_rotation(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      server_output,
      pre_group_key,
      public_key,
      private_key,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_finish_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_finish_key_rotation');
  late final _wire__crate__api__group__group_finish_key_rotation =
      _wire__crate__api__group__group_finish_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_all_first_level_children(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_all_first_level_children(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      last_fetched_time,
      last_fetched_group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_all_first_level_childrenPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__group__group_get_all_first_level_children');
  late final _wire__crate__api__group__group_get_all_first_level_children =
      _wire__crate__api__group__group_get_all_first_level_childrenPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco
      wire__crate__api__group__group_get_done_key_rotation_server_input(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__group__group_get_done_key_rotation_server_input(
      server_output,
    );
  }

  late final _wire__crate__api__group__group_get_done_key_rotation_server_inputPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__group__group_get_done_key_rotation_server_input');
  late final _wire__crate__api__group__group_get_done_key_rotation_server_input =
      _wire__crate__api__group__group_get_done_key_rotation_server_inputPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_group_data(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_group_data(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_group_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_group_data');
  late final _wire__crate__api__group__group_get_group_data =
      _wire__crate__api__group__group_get_group_dataPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_group_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_group_key(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      key_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_group_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_group_key');
  late final _wire__crate__api__group__group_get_group_key =
      _wire__crate__api__group__group_get_group_keyPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_group_keys(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_key_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_group_keys(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      last_fetched_time,
      last_fetched_key_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_group_keysPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_group_keys');
  late final _wire__crate__api__group__group_get_group_keys =
      _wire__crate__api__group__group_get_group_keysPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_group_updates(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_group_updates(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_group_updatesPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_group_updates');
  late final _wire__crate__api__group__group_get_group_updates =
      _wire__crate__api__group__group_get_group_updatesPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_groups_for_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
  ) {
    return _wire__crate__api__group__group_get_groups_for_user(
      port_,
      base_url,
      auth_token,
      jwt,
      last_fetched_time,
      last_fetched_group_id,
      group_id,
    );
  }

  late final _wire__crate__api__group__group_get_groups_for_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_groups_for_user');
  late final _wire__crate__api__group__group_get_groups_for_user =
      _wire__crate__api__group__group_get_groups_for_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_invites_for_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_invites_for_user(
      port_,
      base_url,
      auth_token,
      jwt,
      last_fetched_time,
      last_fetched_group_id,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_invites_for_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_invites_for_user');
  late final _wire__crate__api__group__group_get_invites_for_user =
      _wire__crate__api__group__group_get_invites_for_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_join_reqs(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_join_reqs(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      admin_rank,
      last_fetched_time,
      last_fetched_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_join_reqsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_join_reqs');
  late final _wire__crate__api__group__group_get_join_reqs =
      _wire__crate__api__group__group_get_join_reqsPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_member(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_member(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      last_fetched_time,
      last_fetched_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_memberPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_member');
  late final _wire__crate__api__group__group_get_member =
      _wire__crate__api__group__group_get_memberPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_public_key_data(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
  ) {
    return _wire__crate__api__group__group_get_public_key_data(
      port_,
      base_url,
      auth_token,
      id,
    );
  }

  late final _wire__crate__api__group__group_get_public_key_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_public_key_data');
  late final _wire__crate__api__group__group_get_public_key_data =
      _wire__crate__api__group__group_get_public_key_dataPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_sent_join_req(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_sent_join_req(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      admin_rank,
      last_fetched_time,
      last_fetched_group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_sent_join_reqPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_get_sent_join_req');
  late final _wire__crate__api__group__group_get_sent_join_req =
      _wire__crate__api__group__group_get_sent_join_reqPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_get_sent_join_req_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_time,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> last_fetched_group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_get_sent_join_req_user(
      port_,
      base_url,
      auth_token,
      jwt,
      last_fetched_time,
      last_fetched_group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_get_sent_join_req_userPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__group__group_get_sent_join_req_user');
  late final _wire__crate__api__group__group_get_sent_join_req_user =
      _wire__crate__api__group__group_get_sent_join_req_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_invite_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
    int key_count,
    ffi.Pointer<ffi.Int32> rank,
    int admin_rank,
    bool auto_invite,
    bool group_invite,
    bool re_invite,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_keys,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_invite_user(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      user_id,
      key_count,
      rank,
      admin_rank,
      auto_invite,
      group_invite,
      re_invite,
      user_public_key,
      group_keys,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_invite_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Int32,
                  ffi.Bool,
                  ffi.Bool,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_invite_user');
  late final _wire__crate__api__group__group_invite_user =
      _wire__crate__api__group__group_invite_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<ffi.Int32>,
              int,
              bool,
              bool,
              bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_invite_user_session(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    bool auto_invite,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_keys,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_invite_user_session(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      auto_invite,
      session_id,
      user_public_key,
      group_keys,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_invite_user_sessionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_invite_user_session');
  late final _wire__crate__api__group__group_invite_user_session =
      _wire__crate__api__group__group_invite_user_sessionPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_join_req(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_join_req(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_join_reqPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_join_req');
  late final _wire__crate__api__group__group_join_req =
      _wire__crate__api__group__group_join_reqPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_join_user_session(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_keys,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_join_user_session(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      session_id,
      user_public_key,
      group_keys,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_join_user_sessionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_join_user_session');
  late final _wire__crate__api__group__group_join_user_session =
      _wire__crate__api__group__group_join_user_sessionPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> starter,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_key_rotation(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      public_key,
      pre_group_key,
      sign_key,
      starter,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_key_rotation');
  late final _wire__crate__api__group__group_key_rotation =
      _wire__crate__api__group__group_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_kick_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_kick_user(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      user_id,
      admin_rank,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_kick_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_kick_user');
  late final _wire__crate__api__group__group_kick_user =
      _wire__crate__api__group__group_kick_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_pre_done_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_pre_done_key_rotation(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_pre_done_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_pre_done_key_rotation');
  late final _wire__crate__api__group__group_pre_done_key_rotation =
      _wire__crate__api__group__group_pre_done_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_prepare_create_group(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> creators_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> starter,
  ) {
    return _wire__crate__api__group__group_prepare_create_group(
      port_,
      creators_public_key,
      sign_key,
      starter,
    );
  }

  late final _wire__crate__api__group__group_prepare_create_groupPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_prepare_create_group');
  late final _wire__crate__api__group__group_prepare_create_group =
      _wire__crate__api__group__group_prepare_create_groupPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_prepare_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> starter,
  ) {
    return _wire__crate__api__group__group_prepare_key_rotation(
      port_,
      pre_group_key,
      public_key,
      sign_key,
      starter,
    );
  }

  late final _wire__crate__api__group__group_prepare_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_prepare_key_rotation');
  late final _wire__crate__api__group__group_prepare_key_rotation =
      _wire__crate__api__group__group_prepare_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_prepare_keys_for_new_member(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_keys,
    int key_count,
    ffi.Pointer<ffi.Int32> rank,
    int admin_rank,
  ) {
    return _wire__crate__api__group__group_prepare_keys_for_new_member(
      port_,
      user_public_key,
      group_keys,
      key_count,
      rank,
      admin_rank,
    );
  }

  late final _wire__crate__api__group__group_prepare_keys_for_new_memberPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Int32>,
                      ffi.Int32)>>(
          'frbgen_sentc_wire__crate__api__group__group_prepare_keys_for_new_member');
  late final _wire__crate__api__group__group_prepare_keys_for_new_member =
      _wire__crate__api__group__group_prepare_keys_for_new_memberPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<ffi.Int32>,
              int)>();

  WireSyncRust2DartDco wire__crate__api__group__group_prepare_update_rank(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
    int rank,
    int admin_rank,
  ) {
    return _wire__crate__api__group__group_prepare_update_rank(
      user_id,
      rank,
      admin_rank,
    );
  }

  late final _wire__crate__api__group__group_prepare_update_rankPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Int32)>>(
      'frbgen_sentc_wire__crate__api__group__group_prepare_update_rank');
  late final _wire__crate__api__group__group_prepare_update_rank =
      _wire__crate__api__group__group_prepare_update_rankPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_8_strict>, int, int)>();

  void wire__crate__api__group__group_reject_invite(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_reject_invite(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_reject_invitePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_reject_invite');
  late final _wire__crate__api__group__group_reject_invite =
      _wire__crate__api__group__group_reject_invitePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_reject_join_req(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> rejected_user_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_reject_join_req(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      admin_rank,
      rejected_user_id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_reject_join_reqPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_reject_join_req');
  late final _wire__crate__api__group__group_reject_join_req =
      _wire__crate__api__group__group_reject_join_reqPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_stop_group_invites(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_stop_group_invites(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      admin_rank,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_stop_group_invitesPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_stop_group_invites');
  late final _wire__crate__api__group__group_stop_group_invites =
      _wire__crate__api__group__group_stop_group_invitesPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__group_update_rank(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
    int rank,
    int admin_rank,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__group_update_rank(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      user_id,
      rank,
      admin_rank,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__group_update_rankPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__group_update_rank');
  late final _wire__crate__api__group__group_update_rank =
      _wire__crate__api__group__group_update_rankPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__init_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> refresh_token,
  ) {
    return _wire__crate__api__user__init_user(
      port_,
      base_url,
      auth_token,
      jwt,
      refresh_token,
    );
  }

  late final _wire__crate__api__user__init_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__init_user');
  late final _wire__crate__api__user__init_user =
      _wire__crate__api__user__init_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__group__leave_group(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_as_member,
  ) {
    return _wire__crate__api__group__leave_group(
      port_,
      base_url,
      auth_token,
      jwt,
      id,
      group_as_member,
    );
  }

  late final _wire__crate__api__group__leave_groupPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__group__leave_group');
  late final _wire__crate__api__group__leave_group =
      _wire__crate__api__group__leave_groupPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__login(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> password,
  ) {
    return _wire__crate__api__user__login(
      port_,
      base_url,
      auth_token,
      user_identifier,
      password,
    );
  }

  late final _wire__crate__api__user__loginPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__login');
  late final _wire__crate__api__user__login =
      _wire__crate__api__user__loginPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__mfa_login(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key_encryption,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> token,
    bool recovery,
  ) {
    return _wire__crate__api__user__mfa_login(
      port_,
      base_url,
      auth_token,
      master_key_encryption,
      auth_key,
      user_identifier,
      token,
      recovery,
    );
  }

  late final _wire__crate__api__user__mfa_loginPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool)>>('frbgen_sentc_wire__crate__api__user__mfa_login');
  late final _wire__crate__api__user__mfa_login =
      _wire__crate__api__user__mfa_loginPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool)>();

  WireSyncRust2DartDco
      wire__crate__api__user__prepare_check_user_identifier_available(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
  ) {
    return _wire__crate__api__user__prepare_check_user_identifier_available(
      user_identifier,
    );
  }

  late final _wire__crate__api__user__prepare_check_user_identifier_availablePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__user__prepare_check_user_identifier_available');
  late final _wire__crate__api__user__prepare_check_user_identifier_available =
      _wire__crate__api__user__prepare_check_user_identifier_availablePtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__prepare_register(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> password,
  ) {
    return _wire__crate__api__user__prepare_register(
      port_,
      user_identifier,
      password,
    );
  }

  late final _wire__crate__api__user__prepare_registerPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__prepare_register');
  late final _wire__crate__api__user__prepare_register =
      _wire__crate__api__user__prepare_registerPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__prepare_register_device(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_keys,
    int key_count,
  ) {
    return _wire__crate__api__user__prepare_register_device(
      port_,
      server_output,
      user_keys,
      key_count,
    );
  }

  late final _wire__crate__api__user__prepare_register_devicePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32)>>(
      'frbgen_sentc_wire__crate__api__user__prepare_register_device');
  late final _wire__crate__api__user__prepare_register_device =
      _wire__crate__api__user__prepare_register_devicePtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>, int)>();

  void wire__crate__api__user__prepare_register_device_start(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> device_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> password,
  ) {
    return _wire__crate__api__user__prepare_register_device_start(
      port_,
      device_identifier,
      password,
    );
  }

  late final _wire__crate__api__user__prepare_register_device_startPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__user__prepare_register_device_start');
  late final _wire__crate__api__user__prepare_register_device_start =
      _wire__crate__api__user__prepare_register_device_startPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__refresh_jwt(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> refresh_token,
  ) {
    return _wire__crate__api__user__refresh_jwt(
      port_,
      base_url,
      auth_token,
      jwt,
      refresh_token,
    );
  }

  late final _wire__crate__api__user__refresh_jwtPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__refresh_jwt');
  late final _wire__crate__api__user__refresh_jwt =
      _wire__crate__api__user__refresh_jwtPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__register(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> password,
  ) {
    return _wire__crate__api__user__register(
      port_,
      base_url,
      auth_token,
      user_identifier,
      password,
    );
  }

  late final _wire__crate__api__user__registerPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__register');
  late final _wire__crate__api__user__register =
      _wire__crate__api__user__registerPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__register_device(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
    int key_count,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_keys,
  ) {
    return _wire__crate__api__user__register_device(
      port_,
      base_url,
      auth_token,
      jwt,
      server_output,
      key_count,
      user_keys,
    );
  }

  late final _wire__crate__api__user__register_devicePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Int32,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__register_device');
  late final _wire__crate__api__user__register_device =
      _wire__crate__api__user__register_devicePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__register_device_start(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> device_identifier,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> password,
  ) {
    return _wire__crate__api__user__register_device_start(
      port_,
      base_url,
      auth_token,
      device_identifier,
      password,
    );
  }

  late final _wire__crate__api__user__register_device_startPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__register_device_start');
  late final _wire__crate__api__user__register_device_start =
      _wire__crate__api__user__register_device_startPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__register_otp(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> issuer,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> audience,
  ) {
    return _wire__crate__api__user__register_otp(
      port_,
      base_url,
      auth_token,
      jwt,
      issuer,
      audience,
    );
  }

  late final _wire__crate__api__user__register_otpPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__register_otp');
  late final _wire__crate__api__user__register_otp =
      _wire__crate__api__user__register_otpPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__register_raw_otp(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
  ) {
    return _wire__crate__api__user__register_raw_otp(
      port_,
      base_url,
      auth_token,
      jwt,
    );
  }

  late final _wire__crate__api__user__register_raw_otpPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__register_raw_otp');
  late final _wire__crate__api__user__register_raw_otp =
      _wire__crate__api__user__register_raw_otpPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__reset_otp(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> issuer,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> audience,
  ) {
    return _wire__crate__api__user__reset_otp(
      port_,
      base_url,
      auth_token,
      jwt,
      issuer,
      audience,
    );
  }

  late final _wire__crate__api__user__reset_otpPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__reset_otp');
  late final _wire__crate__api__user__reset_otp =
      _wire__crate__api__user__reset_otpPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__reset_password(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> new_password,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> decrypted_private_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> decrypted_sign_key,
  ) {
    return _wire__crate__api__user__reset_password(
      port_,
      base_url,
      auth_token,
      jwt,
      new_password,
      decrypted_private_key,
      decrypted_sign_key,
    );
  }

  late final _wire__crate__api__user__reset_passwordPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__reset_password');
  late final _wire__crate__api__user__reset_password =
      _wire__crate__api__user__reset_passwordPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__reset_raw_otp(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
  ) {
    return _wire__crate__api__user__reset_raw_otp(
      port_,
      base_url,
      auth_token,
      jwt,
    );
  }

  late final _wire__crate__api__user__reset_raw_otpPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__reset_raw_otp');
  late final _wire__crate__api__user__reset_raw_otp =
      _wire__crate__api__user__reset_raw_otpPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__search(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
  ) {
    return _wire__crate__api__crypto__search(
      port_,
      key,
      data,
    );
  }

  late final _wire__crate__api__crypto__searchPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__search');
  late final _wire__crate__api__crypto__search =
      _wire__crate__api__crypto__searchPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__sortable_encrypt_number(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    int data,
  ) {
    return _wire__crate__api__crypto__sortable_encrypt_number(
      port_,
      key,
      data,
    );
  }

  late final _wire__crate__api__crypto__sortable_encrypt_numberPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>, ffi.Uint64)>>(
      'frbgen_sentc_wire__crate__api__crypto__sortable_encrypt_number');
  late final _wire__crate__api__crypto__sortable_encrypt_number =
      _wire__crate__api__crypto__sortable_encrypt_numberPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>, int)>();

  void wire__crate__api__crypto__sortable_encrypt_raw_number(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    int data,
  ) {
    return _wire__crate__api__crypto__sortable_encrypt_raw_number(
      port_,
      key,
      data,
    );
  }

  late final _wire__crate__api__crypto__sortable_encrypt_raw_numberPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>, ffi.Uint64)>>(
          'frbgen_sentc_wire__crate__api__crypto__sortable_encrypt_raw_number');
  late final _wire__crate__api__crypto__sortable_encrypt_raw_number =
      _wire__crate__api__crypto__sortable_encrypt_raw_numberPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>, int)>();

  void wire__crate__api__crypto__sortable_encrypt_raw_string(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
  ) {
    return _wire__crate__api__crypto__sortable_encrypt_raw_string(
      port_,
      key,
      data,
    );
  }

  late final _wire__crate__api__crypto__sortable_encrypt_raw_stringPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__crypto__sortable_encrypt_raw_string');
  late final _wire__crate__api__crypto__sortable_encrypt_raw_string =
      _wire__crate__api__crypto__sortable_encrypt_raw_stringPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__sortable_encrypt_string(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
  ) {
    return _wire__crate__api__crypto__sortable_encrypt_string(
      port_,
      key,
      data,
    );
  }

  late final _wire__crate__api__crypto__sortable_encrypt_stringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__crypto__sortable_encrypt_string');
  late final _wire__crate__api__crypto__sortable_encrypt_string =
      _wire__crate__api__crypto__sortable_encrypt_stringPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__crypto__split_head_and_encrypted_data(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
  ) {
    return _wire__crate__api__crypto__split_head_and_encrypted_data(
      port_,
      data,
    );
  }

  late final _wire__crate__api__crypto__split_head_and_encrypted_dataPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
          'frbgen_sentc_wire__crate__api__crypto__split_head_and_encrypted_data');
  late final _wire__crate__api__crypto__split_head_and_encrypted_data =
      _wire__crate__api__crypto__split_head_and_encrypted_dataPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire__crate__api__crypto__split_head_and_encrypted_string(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> data,
  ) {
    return _wire__crate__api__crypto__split_head_and_encrypted_string(
      port_,
      data,
    );
  }

  late final _wire__crate__api__crypto__split_head_and_encrypted_stringPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__crypto__split_head_and_encrypted_string');
  late final _wire__crate__api__crypto__split_head_and_encrypted_string =
      _wire__crate__api__crypto__split_head_and_encrypted_stringPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__update_user(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_identifier,
  ) {
    return _wire__crate__api__user__update_user(
      port_,
      base_url,
      auth_token,
      jwt,
      user_identifier,
    );
  }

  late final _wire__crate__api__user__update_userPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__update_user');
  late final _wire__crate__api__user__update_user =
      _wire__crate__api__user__update_userPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_create_safety_number(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_1,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id_1,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_2,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id_2,
  ) {
    return _wire__crate__api__user__user_create_safety_number(
      port_,
      verify_key_1,
      user_id_1,
      verify_key_2,
      user_id_2,
    );
  }

  late final _wire__crate__api__user__user_create_safety_numberPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_create_safety_number');
  late final _wire__crate__api__user__user_create_safety_number =
      _wire__crate__api__user__user_create_safety_numberPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_device_key_session_upload(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> group_keys,
  ) {
    return _wire__crate__api__user__user_device_key_session_upload(
      port_,
      base_url,
      auth_token,
      jwt,
      session_id,
      user_public_key,
      group_keys,
    );
  }

  late final _wire__crate__api__user__user_device_key_session_uploadPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                      ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__user__user_device_key_session_upload');
  late final _wire__crate__api__user__user_device_key_session_upload =
      _wire__crate__api__user__user_device_key_session_uploadPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_fetch_public_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
  ) {
    return _wire__crate__api__user__user_fetch_public_key(
      port_,
      base_url,
      auth_token,
      user_id,
    );
  }

  late final _wire__crate__api__user__user_fetch_public_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_fetch_public_key');
  late final _wire__crate__api__user__user_fetch_public_key =
      _wire__crate__api__user__user_fetch_public_keyPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_fetch_verify_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key_id,
  ) {
    return _wire__crate__api__user__user_fetch_verify_key(
      port_,
      base_url,
      auth_token,
      user_id,
      verify_key_id,
    );
  }

  late final _wire__crate__api__user__user_fetch_verify_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_fetch_verify_key');
  late final _wire__crate__api__user__user_fetch_verify_key =
      _wire__crate__api__user__user_fetch_verify_keyPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_finish_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_group_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key,
  ) {
    return _wire__crate__api__user__user_finish_key_rotation(
      port_,
      base_url,
      auth_token,
      jwt,
      server_output,
      pre_group_key,
      public_key,
      private_key,
    );
  }

  late final _wire__crate__api__user__user_finish_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_finish_key_rotation');
  late final _wire__crate__api__user__user_finish_key_rotation =
      _wire__crate__api__user__user_finish_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_get_done_key_rotation_server_input(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output,
  ) {
    return _wire__crate__api__user__user_get_done_key_rotation_server_input(
      port_,
      server_output,
    );
  }

  late final _wire__crate__api__user__user_get_done_key_rotation_server_inputPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
          'frbgen_sentc_wire__crate__api__user__user_get_done_key_rotation_server_input');
  late final _wire__crate__api__user__user_get_done_key_rotation_server_input =
      _wire__crate__api__user__user_get_done_key_rotation_server_inputPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_device_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_user_key,
  ) {
    return _wire__crate__api__user__user_key_rotation(
      port_,
      base_url,
      auth_token,
      jwt,
      public_device_key,
      pre_user_key,
    );
  }

  late final _wire__crate__api__user__user_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_key_rotation');
  late final _wire__crate__api__user__user_key_rotation =
      _wire__crate__api__user__user_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_pre_done_key_rotation(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> base_url,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_token,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt,
  ) {
    return _wire__crate__api__user__user_pre_done_key_rotation(
      port_,
      base_url,
      auth_token,
      jwt,
    );
  }

  late final _wire__crate__api__user__user_pre_done_key_rotationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_pre_done_key_rotation');
  late final _wire__crate__api__user__user_pre_done_key_rotation =
      _wire__crate__api__user__user_pre_done_key_rotationPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire__crate__api__user__user_verify_user_public_key(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key,
  ) {
    return _wire__crate__api__user__user_verify_user_public_key(
      port_,
      verify_key,
      public_key,
    );
  }

  late final _wire__crate__api__user__user_verify_user_public_keyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_sentc_wire__crate__api__user__user_verify_user_public_key');
  late final _wire__crate__api__user__user_verify_user_public_key =
      _wire__crate__api__user__user_verify_user_public_keyPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  ffi.Pointer<ffi.Bool> cst_new_box_autoadd_bool(
    bool value,
  ) {
    return _cst_new_box_autoadd_bool(
      value,
    );
  }

  late final _cst_new_box_autoadd_boolPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'frbgen_sentc_cst_new_box_autoadd_bool');
  late final _cst_new_box_autoadd_bool = _cst_new_box_autoadd_boolPtr
      .asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_i_32(
    int value,
  ) {
    return _cst_new_box_autoadd_i_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_sentc_cst_new_box_autoadd_i_32');
  late final _cst_new_box_autoadd_i_32 = _cst_new_box_autoadd_i_32Ptr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Uint32> cst_new_box_autoadd_u_32(
    int value,
  ) {
    return _cst_new_box_autoadd_u_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint32> Function(ffi.Uint32)>>(
          'frbgen_sentc_cst_new_box_autoadd_u_32');
  late final _cst_new_box_autoadd_u_32 = _cst_new_box_autoadd_u_32Ptr
      .asFunction<ffi.Pointer<ffi.Uint32> Function(int)>();

  ffi.Pointer<wire_cst_list_String> cst_new_list_String(
    int len,
  ) {
    return _cst_new_list_String(
      len,
    );
  }

  late final _cst_new_list_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_String> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_String');
  late final _cst_new_list_String = _cst_new_list_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_String> Function(int)>();

  ffi.Pointer<wire_cst_list_file_part_list_item>
      cst_new_list_file_part_list_item(
    int len,
  ) {
    return _cst_new_list_file_part_list_item(
      len,
    );
  }

  late final _cst_new_list_file_part_list_itemPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_file_part_list_item> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_file_part_list_item');
  late final _cst_new_list_file_part_list_item =
      _cst_new_list_file_part_list_itemPtr.asFunction<
          ffi.Pointer<wire_cst_list_file_part_list_item> Function(int)>();

  ffi.Pointer<wire_cst_list_group_children_list>
      cst_new_list_group_children_list(
    int len,
  ) {
    return _cst_new_list_group_children_list(
      len,
    );
  }

  late final _cst_new_list_group_children_listPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_group_children_list> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_group_children_list');
  late final _cst_new_list_group_children_list =
      _cst_new_list_group_children_listPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_children_list> Function(int)>();

  ffi.Pointer<wire_cst_list_group_invite_req_list>
      cst_new_list_group_invite_req_list(
    int len,
  ) {
    return _cst_new_list_group_invite_req_list(
      len,
    );
  }

  late final _cst_new_list_group_invite_req_listPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_group_invite_req_list> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_group_invite_req_list');
  late final _cst_new_list_group_invite_req_list =
      _cst_new_list_group_invite_req_listPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_invite_req_list> Function(int)>();

  ffi.Pointer<wire_cst_list_group_join_req_list>
      cst_new_list_group_join_req_list(
    int len,
  ) {
    return _cst_new_list_group_join_req_list(
      len,
    );
  }

  late final _cst_new_list_group_join_req_listPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_group_join_req_list> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_group_join_req_list');
  late final _cst_new_list_group_join_req_list =
      _cst_new_list_group_join_req_listPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_join_req_list> Function(int)>();

  ffi.Pointer<wire_cst_list_group_out_data_hmac_keys>
      cst_new_list_group_out_data_hmac_keys(
    int len,
  ) {
    return _cst_new_list_group_out_data_hmac_keys(
      len,
    );
  }

  late final _cst_new_list_group_out_data_hmac_keysPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_group_out_data_hmac_keys> Function(
                  ffi.Int32)>>(
      'frbgen_sentc_cst_new_list_group_out_data_hmac_keys');
  late final _cst_new_list_group_out_data_hmac_keys =
      _cst_new_list_group_out_data_hmac_keysPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_out_data_hmac_keys> Function(int)>();

  ffi.Pointer<wire_cst_list_group_out_data_keys>
      cst_new_list_group_out_data_keys(
    int len,
  ) {
    return _cst_new_list_group_out_data_keys(
      len,
    );
  }

  late final _cst_new_list_group_out_data_keysPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_group_out_data_keys> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_group_out_data_keys');
  late final _cst_new_list_group_out_data_keys =
      _cst_new_list_group_out_data_keysPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_out_data_keys> Function(int)>();

  ffi.Pointer<wire_cst_list_group_out_data_sortable_keys>
      cst_new_list_group_out_data_sortable_keys(
    int len,
  ) {
    return _cst_new_list_group_out_data_sortable_keys(
      len,
    );
  }

  late final _cst_new_list_group_out_data_sortable_keysPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_group_out_data_sortable_keys> Function(
                  ffi.Int32)>>(
      'frbgen_sentc_cst_new_list_group_out_data_sortable_keys');
  late final _cst_new_list_group_out_data_sortable_keys =
      _cst_new_list_group_out_data_sortable_keysPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_out_data_sortable_keys> Function(
              int)>();

  ffi.Pointer<wire_cst_list_group_user_list_item>
      cst_new_list_group_user_list_item(
    int len,
  ) {
    return _cst_new_list_group_user_list_item(
      len,
    );
  }

  late final _cst_new_list_group_user_list_itemPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_group_user_list_item> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_group_user_list_item');
  late final _cst_new_list_group_user_list_item =
      _cst_new_list_group_user_list_itemPtr.asFunction<
          ffi.Pointer<wire_cst_list_group_user_list_item> Function(int)>();

  ffi.Pointer<wire_cst_list_key_rotation_get_out>
      cst_new_list_key_rotation_get_out(
    int len,
  ) {
    return _cst_new_list_key_rotation_get_out(
      len,
    );
  }

  late final _cst_new_list_key_rotation_get_outPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_key_rotation_get_out> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_key_rotation_get_out');
  late final _cst_new_list_key_rotation_get_out =
      _cst_new_list_key_rotation_get_outPtr.asFunction<
          ffi.Pointer<wire_cst_list_key_rotation_get_out> Function(int)>();

  ffi.Pointer<wire_cst_list_list_groups> cst_new_list_list_groups(
    int len,
  ) {
    return _cst_new_list_list_groups(
      len,
    );
  }

  late final _cst_new_list_list_groupsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_list_groups> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_list_groups');
  late final _cst_new_list_list_groups = _cst_new_list_list_groupsPtr
      .asFunction<ffi.Pointer<wire_cst_list_list_groups> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_loose> cst_new_list_prim_u_8_loose(
    int len,
  ) {
    return _cst_new_list_prim_u_8_loose(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_loosePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_loose> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_prim_u_8_loose');
  late final _cst_new_list_prim_u_8_loose = _cst_new_list_prim_u_8_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_new_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_prim_u_8_strict');
  late final _cst_new_list_prim_u_8_strict = _cst_new_list_prim_u_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_user_device_list> cst_new_list_user_device_list(
    int len,
  ) {
    return _cst_new_list_user_device_list(
      len,
    );
  }

  late final _cst_new_list_user_device_listPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_user_device_list> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_user_device_list');
  late final _cst_new_list_user_device_list = _cst_new_list_user_device_listPtr
      .asFunction<ffi.Pointer<wire_cst_list_user_device_list> Function(int)>();

  ffi.Pointer<wire_cst_list_user_key_data> cst_new_list_user_key_data(
    int len,
  ) {
    return _cst_new_list_user_key_data(
      len,
    );
  }

  late final _cst_new_list_user_key_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_user_key_data> Function(
              ffi.Int32)>>('frbgen_sentc_cst_new_list_user_key_data');
  late final _cst_new_list_user_key_data = _cst_new_list_user_key_dataPtr
      .asFunction<ffi.Pointer<wire_cst_list_user_key_data> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

typedef DartPostCObjectFnType
    = ffi.Pointer<ffi.NativeFunction<DartPostCObjectFnTypeFunction>>;
typedef DartPostCObjectFnTypeFunction = ffi.Bool Function(
    DartPort port_id, ffi.Pointer<ffi.Void> message);
typedef DartDartPostCObjectFnTypeFunction = bool Function(
    DartDartPort port_id, ffi.Pointer<ffi.Void> message);
typedef DartPort = ffi.Int64;
typedef DartDartPort = int;

final class wire_cst_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_8_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_file_part_list_item extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> part_id;

  @ffi.Int32()
  external int sequence;

  @ffi.Bool()
  external bool extern_storage;
}

final class wire_cst_list_file_part_list_item extends ffi.Struct {
  external ffi.Pointer<wire_cst_file_part_list_item> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_children_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> parent;
}

final class wire_cst_list_group_children_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_children_list> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_invite_req_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;
}

final class wire_cst_list_group_invite_req_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_invite_req_list> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_join_req_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  @ffi.Int32()
  external int user_type;
}

final class wire_cst_list_group_join_req_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_join_req_list> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_out_data_hmac_keys extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key_data;
}

final class wire_cst_list_group_out_data_hmac_keys extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_out_data_hmac_keys> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_out_data_keys extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key_data;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> signed_by_user_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict>
      signed_by_user_sign_key_id;
}

final class wire_cst_list_group_out_data_keys extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_out_data_keys> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_out_data_sortable_keys extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key_data;
}

final class wire_cst_list_group_out_data_sortable_keys extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_out_data_sortable_keys> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_group_user_list_item extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id;

  @ffi.Int32()
  external int rank;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> joined_time;

  @ffi.Int32()
  external int user_type;
}

final class wire_cst_list_group_user_list_item extends ffi.Struct {
  external ffi.Pointer<wire_cst_group_user_list_item> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_key_rotation_get_out extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> pre_group_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> new_group_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_eph_key_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> server_output;
}

final class wire_cst_list_key_rotation_get_out extends ffi.Struct {
  external ffi.Pointer<wire_cst_key_rotation_get_out> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_groups extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> joined_time;

  @ffi.Int32()
  external int rank;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> parent;
}

final class wire_cst_list_list_groups extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_groups> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_user_device_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> device_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> device_identifier;
}

final class wire_cst_list_user_device_list extends ffi.Struct {
  external ffi.Pointer<wire_cst_user_device_list> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_user_key_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict>
      exported_public_key_sig_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_verify_key;
}

final class wire_cst_list_user_key_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_user_key_data> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_claims extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> aud;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> sub;

  @ffi.UintPtr()
  external int exp;

  @ffi.UintPtr()
  external int iat;

  @ffi.Bool()
  external bool fresh;
}

final class wire_cst_crypto_raw_output extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> head;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> data;
}

final class wire_cst_device_key_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> private_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> verify_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_verify_key;
}

final class wire_cst_encrypted_head extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> sign_alg;
}

final class wire_cst_file_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> file_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> owner;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> belongs_to;

  @ffi.Int32()
  external int belongs_to_type;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_key_alg;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_file_name;

  external ffi.Pointer<wire_cst_list_file_part_list_item> part_list;
}

final class wire_cst_file_done_register extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> file_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id;
}

final class wire_cst_file_download_result extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> next_file_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> file;
}

final class wire_cst_file_prepare_register extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_file_name;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> server_input;
}

final class wire_cst_file_register_output extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> file_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_file_name;
}

final class wire_cst_generated_register_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> identifier;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> password;
}

final class wire_cst_group_data_check_update_server_output extends ffi.Struct {
  @ffi.Bool()
  external bool key_update;

  @ffi.Int32()
  external int rank;
}

final class wire_cst_group_key_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> private_group_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_group_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_key_id;
}

final class wire_cst_group_out_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> group_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> parent_group_id;

  @ffi.Int32()
  external int rank;

  @ffi.Bool()
  external bool key_update;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> created_time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> joined_time;

  external ffi.Pointer<wire_cst_list_group_out_data_keys> keys;

  external ffi.Pointer<wire_cst_list_group_out_data_hmac_keys> hmac_keys;

  external ffi.Pointer<wire_cst_list_group_out_data_sortable_keys>
      sortable_keys;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> access_by_group_as_member;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> access_by_parent_group;

  @ffi.Bool()
  external bool is_connected_group;
}

final class wire_cst_group_public_key_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key_id;
}

final class wire_cst_key_rotation_input extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> error;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict>
      encrypted_ephemeral_key_by_group_key_and_public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict>
      encrypted_group_key_by_ephemeral;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> ephemeral_alg;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_eph_key_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> previous_group_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> time;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> new_group_key_id;
}

final class wire_cst_non_registered_key_output extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> encrypted_key;
}

final class wire_cst_otp_recovery_keys_output extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_String> keys;
}

final class wire_cst_otp_register extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> secret;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> alg;

  external ffi.Pointer<wire_cst_list_String> recover;
}

final class wire_cst_otp_register_url extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> url;

  external ffi.Pointer<wire_cst_list_String> recover;
}

final class wire_cst_pre_register_device_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> input;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_public_key;
}

final class wire_cst_register_device_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> session_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> exported_public_key;
}

final class wire_cst_searchable_create_output extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_String> hashes;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> alg;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key_id;
}

final class wire_cst_sortable_encrypt_output extends ffi.Struct {
  @ffi.Uint64()
  external int number;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> alg;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> key_id;
}

final class wire_cst_user_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> user_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> device_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> refresh_token;

  external wire_cst_device_key_data keys;

  external ffi.Pointer<wire_cst_list_user_key_data> user_keys;

  external ffi.Pointer<wire_cst_list_group_out_data_hmac_keys> hmac_keys;
}

final class wire_cst_user_init_server_output extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> jwt;

  external ffi.Pointer<wire_cst_list_group_invite_req_list> invites;
}

final class wire_cst_user_login_out extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> direct;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> master_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> auth_key;
}

final class wire_cst_user_public_key_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> public_key_sig_key_id;
}
